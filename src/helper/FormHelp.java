/*
 * Copyright (C) 2015 SAA
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package helper;

import controlador.Diagrama;
import controlador.Editor;
import controlador.apoios.TreeItem;
import desenho.FormaElementar;
import helper.data.Handler;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import javax.imageio.ImageIO;
import javax.swing.event.HyperlinkEvent;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;
import principal.FramePrincipal;

/**
 *
 * @author SAA
 */
public class FormHelp extends javax.swing.JFrame {

    /**
     * Creates new form FormPartes
     */
    public FormHelp() {
        initComponents();
        setTitle("brModelo: " + Editor.fromConfiguracao.getValor("Controler.interface.help"));
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel4 = new javax.swing.JPanel();
        jToolBar3 = new javax.swing.JToolBar();
        btnEditar = new javax.swing.JToggleButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnUP2 = new javax.swing.JButton();
        btnDown2 = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnAdd = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        btnReload = new javax.swing.JButton();
        btnSalvarII = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tree = new javax.swing.JTree();
        Tabs = new javax.swing.JTabbedPane();
        PanPrincipal = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        htmlEditorPanel2 = new helper.HtmlEditorPanel();
        PanEditor = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnImagem = new javax.swing.JButton();
        btnAbrir = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnOK = new javax.swing.JButton();
        btnDefazerTudo = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnSalvar = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtTitulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        EditorTxt = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        btnAtualizarBrownser = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jScrollPane4 = new javax.swing.JScrollPane();
        htmlEditorPanel1 = new helper.HtmlEditorPanel();
        jPanel2 = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        panNav = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuSalvar = new javax.swing.JMenuItem();
        menuFechar = new javax.swing.JMenuItem();

        jSplitPane2.setDividerLocation(230);
        jSplitPane2.setDividerSize(2);
        jSplitPane2.setResizeWeight(0.1);

        jToolBar3.setFloatable(false);
        jToolBar3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar3.setRollover(true);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("principal/Formularios_pt_BR"); // NOI18N
        btnEditar.setText(bundle.getString("FormHelp.btnEditar.text")); // NOI18N
        btnEditar.setToolTipText(bundle.getString("FormHelp.btnEditar.toolTipText")); // NOI18N
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar3.add(btnEditar);
        jToolBar3.add(jSeparator7);

        btnUP2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/up.png"))); // NOI18N
        btnUP2.setText(bundle.getString("FormHelp.btnUP2.text")); // NOI18N
        btnUP2.setToolTipText(bundle.getString("FormHelp.btnUP2.toolTipText")); // NOI18N
        btnUP2.setFocusable(false);
        btnUP2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUP2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUP2ActionPerformed(evt);
            }
        });
        jToolBar3.add(btnUP2);

        btnDown2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/down.png"))); // NOI18N
        btnDown2.setToolTipText(bundle.getString("FormHelp.btnDown2.toolTipText")); // NOI18N
        btnDown2.setFocusable(false);
        btnDown2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDown2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDown2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDown2ActionPerformed(evt);
            }
        });
        jToolBar3.add(btnDown2);
        btnDown2.getAccessibleContext().setAccessibleDescription(bundle.getString("FormHelp.btnDown2.AccessibleContext.accessibleDescription")); // NOI18N

        jToolBar3.add(jSeparator8);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/add_16.gif"))); // NOI18N
        btnAdd.setText(bundle.getString("FormHelp.btnAdd.text")); // NOI18N
        btnAdd.setToolTipText(bundle.getString("FormHelp.btnAdd.toolTipText")); // NOI18N
        btnAdd.setActionCommand(bundle.getString("FormHelp.btnAdd.actionCommand")); // NOI18N
        btnAdd.setFocusable(false);
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jToolBar3.add(btnAdd);

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/busy.png"))); // NOI18N
        btnDel.setText(bundle.getString("FormHelp.btnDel.text")); // NOI18N
        btnDel.setToolTipText(bundle.getString("FormHelp.btnDel.toolTipText")); // NOI18N
        btnDel.setFocusable(false);
        btnDel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jToolBar3.add(btnDel);
        jToolBar3.add(jSeparator9);

        btnReload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/atualizar.png"))); // NOI18N
        btnReload.setText(bundle.getString("FormHelp.btnReload.text")); // NOI18N
        btnReload.setToolTipText(bundle.getString("FormHelp.btnReload.toolTipText")); // NOI18N
        btnReload.setFocusable(false);
        btnReload.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReload.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });
        jToolBar3.add(btnReload);

        btnSalvarII.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/menu_salvar.png"))); // NOI18N
        btnSalvarII.setText(bundle.getString("FormHelp.btnSalvarII.text")); // NOI18N
        btnSalvarII.setToolTipText(bundle.getString("FormHelp.btnSalvarII.toolTipText")); // NOI18N
        btnSalvarII.setFocusable(false);
        btnSalvarII.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvarII.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvarII.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarIIActionPerformed(evt);
            }
        });
        jToolBar3.add(btnSalvarII);

        Tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TreeMouseClicked(evt);
            }
        });
        Tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                TreeValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(Tree);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
        );

        jSplitPane2.setLeftComponent(jPanel4);

        htmlEditorPanel2.setEditable(false);
        htmlEditorPanel2.setDoubleBuffered(true);
        htmlEditorPanel2.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                htmlEditorPanel2HyperlinkUpdate(evt);
            }
        });
        jScrollPane5.setViewportView(htmlEditorPanel2);

        javax.swing.GroupLayout PanPrincipalLayout = new javax.swing.GroupLayout(PanPrincipal);
        PanPrincipal.setLayout(PanPrincipalLayout);
        PanPrincipalLayout.setHorizontalGroup(
            PanPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
        );
        PanPrincipalLayout.setVerticalGroup(
            PanPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );

        Tabs.addTab(bundle.getString("FormHelp.PanPrincipal.TabConstraints.tabTitle"), PanPrincipal); // NOI18N

        PanEditor.setBackground(new java.awt.Color(204, 204, 255));

        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);

        btnImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imagem_16.png"))); // NOI18N
        btnImagem.setText(bundle.getString("FormHelp.btnImagem.text")); // NOI18N
        btnImagem.setToolTipText(bundle.getString("FormHelp.btnImagem.toolTipText")); // NOI18N
        btnImagem.setFocusable(false);
        btnImagem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImagem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImagemMouseClicked(evt);
            }
        });
        jToolBar1.add(btnImagem);

        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/menu_abrir.png"))); // NOI18N
        btnAbrir.setText(bundle.getString("FormHelp.btnAbrir.text")); // NOI18N
        btnAbrir.setToolTipText(bundle.getString("FormHelp.btnAbrir.toolTipText")); // NOI18N
        btnAbrir.setFocusable(false);
        btnAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAbrir);
        jToolBar1.add(jSeparator4);

        btnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/check.png"))); // NOI18N
        btnOK.setText(bundle.getString("FormHelp.btnOK.text")); // NOI18N
        btnOK.setToolTipText(bundle.getString("FormHelp.btnOK.toolTipText")); // NOI18N
        btnOK.setFocusable(false);
        btnOK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOK.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOK);

        btnDefazerTudo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/undo_16.png"))); // NOI18N
        btnDefazerTudo.setText(bundle.getString("FormHelp.btnDefazerTudo.text")); // NOI18N
        btnDefazerTudo.setToolTipText(bundle.getString("FormHelp.btnDefazerTudo.toolTipText")); // NOI18N
        btnDefazerTudo.setFocusable(false);
        btnDefazerTudo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDefazerTudo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDefazerTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefazerTudoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDefazerTudo);
        jToolBar1.add(jSeparator3);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/menu_salvar.png"))); // NOI18N
        btnSalvar.setText(bundle.getString("FormHelp.btnSalvar.text")); // NOI18N
        btnSalvar.setToolTipText(bundle.getString("FormHelp.btnSalvar.toolTipText")); // NOI18N
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalvar);

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(0.1);

        jLabel1.setText(bundle.getString("FormHelp.jLabel1.text")); // NOI18N

        edtTitulo.setText(bundle.getString("FormHelp.edtTitulo.text")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 222, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        EditorTxt.setColumns(20);
        EditorTxt.setRows(5);
        jScrollPane1.setViewportView(EditorTxt);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(jPanel1);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jToolBar2.add(jSeparator5);

        btnAtualizarBrownser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/down.png"))); // NOI18N
        btnAtualizarBrownser.setToolTipText(bundle.getString("FormHelp.btnAtualizarBrownser.toolTipText")); // NOI18N
        btnAtualizarBrownser.setFocusable(false);
        btnAtualizarBrownser.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizarBrownser.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizarBrownser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarBrownserActionPerformed(evt);
            }
        });
        jToolBar2.add(btnAtualizarBrownser);
        btnAtualizarBrownser.getAccessibleContext().setAccessibleDescription(bundle.getString("FormHelp.btnAtualizarBrownser.AccessibleContext.accessibleDescription")); // NOI18N

        jToolBar2.add(jSeparator6);

        htmlEditorPanel1.setEditable(false);
        htmlEditorPanel1.setDoubleBuffered(true);
        htmlEditorPanel1.setPreferredSize(new java.awt.Dimension(800, 400));
        jScrollPane4.setViewportView(htmlEditorPanel1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(158, Short.MAX_VALUE)))
        );

        jSplitPane1.setBottomComponent(jPanel3);

        javax.swing.GroupLayout PanEditorLayout = new javax.swing.GroupLayout(PanEditor);
        PanEditor.setLayout(PanEditorLayout);
        PanEditorLayout.setHorizontalGroup(
            PanEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanEditorLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 563, Short.MAX_VALUE))
            .addGroup(PanEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanEditorLayout.createSequentialGroup()
                    .addGap(26, 26, 26)
                    .addComponent(jSplitPane1)))
        );
        PanEditorLayout.setVerticalGroup(
            PanEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
            .addGroup(PanEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING))
        );

        Tabs.addTab(bundle.getString("FormHelp.PanPrincipal.TabConstraints.tabTitleEditor"), PanEditor); // NOI18N

        jSplitPane2.setRightComponent(Tabs);
        Tabs.getAccessibleContext().setAccessibleName(bundle.getString("FormHelp.Tabs.AccessibleContext.accessibleName")); // NOI18N

        btnFechar.setText(bundle.getString("FormHelp.btnFechar.text")); // NOI18N
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        panNav.setBackground(new java.awt.Color(204, 204, 255));
        panNav.setLayout(new javax.swing.BoxLayout(panNav, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(panNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFechar)
                    .addComponent(panNav, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2))
        );

        jMenu1.setText(bundle.getString("FormHelp.jMenu1.text")); // NOI18N

        menuSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/menu_salvar.png"))); // NOI18N
        menuSalvar.setText(bundle.getString("FormHelp.menuSalvar.text")); // NOI18N
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(menuSalvar);

        menuFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/sign-out.png"))); // NOI18N
        menuFechar.setText(bundle.getString("FormHelp.menuFechar.text")); // NOI18N
        menuFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFecharActionPerformed(evt);
            }
        });
        jMenu1.add(menuFechar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSplitPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        TreeItem tv = ((TreeItem) Tree.getLastSelectedPathComponent());

        if (tv == null) {
            return;
        }
        ItemAjuda v = AjudaMng.findByID(tv.getId());
        if (v == null) {
            return;
        }
        v.setTexto(EditorTxt.getText());
        v.setTitulo(edtTitulo.getText());
        DoMuda(true);
        PopuleTree();
        SelectNodeByID(v.getID());
    }//GEN-LAST:event_btnOKActionPerformed


    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnFecharActionPerformed

    private void TreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TreeMouseClicked
        ChangeTreeItemSelection();
    }//GEN-LAST:event_TreeMouseClicked

    TreeItem previo = null;
    final ArrayList<ItemAjuda> nav = new ArrayList<>();

    private void ChangeTreeItemSelection() {
        TreeItem tv = ((TreeItem) Tree.getLastSelectedPathComponent());
        if (tv == null) {
            return;
        }
        ItemAjuda v = AjudaMng.findByID(tv.getId());
        if (v == null) {
            return;
        }
        if (previo != null && previo != tv) {
            ItemAjuda iap = AjudaMng.findByID(previo.getId());
            if (iap != null) {
                if (!iap.getTitulo().equals(edtTitulo.getText()) || !iap.getTexto().equals(EditorTxt.getText())) {
                    if (util.Dialogos.ShowMessageConfirmYES(this, ": " + Editor.fromConfiguracao.getValor("Controler.interface.mensagem.msg201"))) {
                        iap.setTexto(EditorTxt.getText());
                        iap.setTitulo(edtTitulo.getText());
                        DoMuda(true);
                        PopuleTree();
                        SelectNodeByID(v.getID());
                    }
                }
            }
            int idx = nav.indexOf(iap);
            if (idx > -1) {
                nav.remove(idx);
                panNav.remove(idx);
            }
            if (nav.size() > 8) {
                nav.remove(0);
                panNav.remove(0);
            }
            nav.add(iap);
            String ps = LabelNav.textoFormatado(previo.getTitulo());
            ps = " [" + ps + (btnEditar.isSelected() ? " (ID: " + String.valueOf(previo.getId()) + ")" : "") + "]";
            LabelNav lb = new LabelNav(ps);
            lb.setId(previo.getId());
            lb.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    int i = ((LabelNav) evt.getSource()).getId();
                    SelectNodeByID(i);
                }
            });
            panNav.add(lb);
            pack();
        }
        EditorTxt.setText(v.getTexto());
        edtTitulo.setText(v.getTitulo());
        htmlEditorPanel1.setText(v.getTexto());
        htmlEditorPanel2.setText(v.getTexto());
        htmlEditorPanel1.repaint();
        htmlEditorPanel2.repaint();
        //maxImgID = v.getImageMaxID();
        previo = tv;

        btnUP2.setEnabled(false);
        btnDown2.setEnabled(false);
        btnDel.setEnabled(false);
        if (btnEditar.isSelected()) {
            btnDel.setEnabled(v.getID() != 0);
            if (btnDel.isEnabled()) {
                int tmp = v.getPai().getChilds().indexOf(v);
                int tmp2 = v.getPai().getChilds().size();
                btnUP2.setEnabled(tmp > 0);
                btnDown2.setEnabled(tmp2 > 1 && tmp < tmp2 - 1);
            }
        }
    }

    private void TreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_TreeValueChanged
        ChangeTreeItemSelection();
    }//GEN-LAST:event_TreeValueChanged

    private int maxID = -1;
    //private int maxImgID = -1;

    private int W = 40;
    private int H = 40;
    private void btnImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImagemMouseClicked
        if (!fmp.getEditor().diagramaAtual.TemSelecionado()) {
            util.Dialogos.ShowMessageInform(getParent(), Editor.fromConfiguracao.getValor("Controler.interface.mensagem.msg202"));
            return;
        }

        //Zera para pegar o tamanho da imagem!
        W = 0;
        H = 0;
        String img = Base64.getEncoder().encodeToString(ImagemDaSelecao());
        int pos = EditorTxt.getCaretPosition();
        int tam = EditorTxt.getText().length();
        String txt = RepositorioHtml.InserirImagem(EditorTxt.getText(), img, pos, W, H);
        EditorTxt.setText(txt);
        tam = EditorTxt.getText().length() - tam;
        EditorTxt.setCaretPosition(pos + tam);
        htmlEditorPanel1.setText(txt);
        htmlEditorPanel1.repaint();
        DoMuda(true);
    }//GEN-LAST:event_btnImagemMouseClicked

    private void btnUP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUP2ActionPerformed
        performMove(-1);
    }//GEN-LAST:event_btnUP2ActionPerformed

    private void btnDown2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDown2ActionPerformed
        performMove(1);
    }//GEN-LAST:event_btnDown2ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        TreeItem tv = ((TreeItem) Tree.getLastSelectedPathComponent());

        if (tv == null) {
            return;
        }
        ItemAjuda v = AjudaMng.findByID(tv.getId());
        if (v == null) {
            return;
        }
        maxID++;
        v.Add(maxID, Editor.fromConfiguracao.getValor("Controler.interface.texto.empyhtmltext"), RepositorioHtml.generateBaseHtml(Editor.fromConfiguracao.getValor("Controler.interface.texto.empyhtmltext")));
        DoMuda(true);
        PopuleTree();
        SelectNodeByID(maxID);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        TreeItem tv = ((TreeItem) Tree.getLastSelectedPathComponent());

        if (tv == null) {
            return;
        }
        ItemAjuda v = AjudaMng.findByID(tv.getId());
        if (v == null) {
            return;
        }
        if (v.getID() == 0) {
            util.Dialogos.ShowMessageERROR(this, Editor.fromConfiguracao.getValor("Controler.MSG_ERRO_DELETE_TOPICO_HELP"));
            return;
        }
        if (util.Dialogos.ShowMessageConfirmYES(this, Editor.fromConfiguracao.getValor("Controler.MSG_DELETE_TOPICO_HELP"))) {
            int id = v.getPai().getID();
            v.getPai().getChilds().remove(v);

            int idx = nav.indexOf(v);
            if (idx > -1) {
                nav.remove(idx);
                panNav.remove(idx);
                pack();
            }

            DoMuda(true);
            PopuleTree();
            SelectNodeByID(id);
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnDefazerTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefazerTudoActionPerformed
        TreeItem tv = ((TreeItem) Tree.getLastSelectedPathComponent());
        if (tv == null) {
            return;
        }
        ItemAjuda v = AjudaMng.findByID(tv.getId());
        if (v == null) {
            return;
        }

        EditorTxt.setText(v.getTexto());
        edtTitulo.setText(v.getTitulo());
        htmlEditorPanel1.setText(v.getTexto());
        htmlEditorPanel1.repaint();
    }//GEN-LAST:event_btnDefazerTudoActionPerformed

    private void btnAtualizarBrownserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarBrownserActionPerformed
        htmlEditorPanel1.setText(EditorTxt.getText());
        htmlEditorPanel1.repaint();
    }//GEN-LAST:event_btnAtualizarBrownserActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (!Salva()) {
            util.Dialogos.ShowMessageERROR(this, Editor.fromConfiguracao.getValor("Controler.MSG_SAVE_HELP_ERROR"));
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnSalvarIIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarIIActionPerformed
        btnSalvarActionPerformed(evt);
    }//GEN-LAST:event_btnSalvarIIActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
//        btnUP2.setEnabled(btnEditar.isSelected());
//        btnDown2.setEnabled(btnEditar.isSelected());
        btnAdd.setEnabled(btnEditar.isSelected());
//        btnDel.setEnabled(btnEditar.isSelected());

        ChangeTreeItemSelection();
        Tabs.setSelectedIndex(0);
        Tabs.setEnabledAt(1, btnEditar.isSelected());
        for (int i = 0; i < panNav.getComponentCount(); i++) {
            LabelNav ln = (LabelNav) panNav.getComponent(i);
            ItemAjuda it = nav.get(i);
            String ps = LabelNav.textoFormatado(it.getTitulo());
            ps = " [" + ps + (btnEditar.isSelected() ? " (ID: " + String.valueOf(it.getID()) + ")" : "") + "]";
            ln.setText(ps);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        if (util.Dialogos.ShowMessageConfirmYES(this, Editor.fromConfiguracao.getValor("Controler.MSG_RELOAD_HELP"))) {
            setVisible(false);
            dispose();
            fmp.ReloadHelp();
        }
    }//GEN-LAST:event_btnReloadActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        //Zera para pegar o tamanho da imagem!
        W = 0;
        H = 0;
        byte[] aimg = LoadImageFromFile();
        if (aimg == null) {
            return;
        }
        String img = Base64.getEncoder().encodeToString(aimg);

        int pos = EditorTxt.getCaretPosition();
        int tam = EditorTxt.getText().length();
        String txt = RepositorioHtml.InserirImagem(EditorTxt.getText(), img, pos, W, H);
        EditorTxt.setText(txt);
        tam = EditorTxt.getText().length() - tam;
        EditorTxt.setCaretPosition(pos + tam);
        htmlEditorPanel1.setText(txt);
        htmlEditorPanel1.repaint();
        DoMuda(true);
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void menuFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFecharActionPerformed
        btnFecharActionPerformed(evt);
    }//GEN-LAST:event_menuFecharActionPerformed

    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
        btnSalvarActionPerformed(evt);
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void htmlEditorPanel2HyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_htmlEditorPanel2HyperlinkUpdate
        if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            int id = util.Utilidades.TryIntStr(evt.getDescription(), -1);
            if (id > -1) {
                SelectNodeByID(id);
            }
            //util.Dialogos.ShowMessageInform(this, evt.getURL() + "\n" + evt.getDescription() + "\n" + evt.getSourceElement().getName());
        }
    }//GEN-LAST:event_htmlEditorPanel2HyperlinkUpdate

    public FramePrincipal fmp = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea EditorTxt;
    private javax.swing.JPanel PanEditor;
    private javax.swing.JPanel PanPrincipal;
    private javax.swing.JTabbedPane Tabs;
    private javax.swing.JTree Tree;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAtualizarBrownser;
    private javax.swing.JButton btnDefazerTudo;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDown2;
    private javax.swing.JToggleButton btnEditar;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnImagem;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvarII;
    private javax.swing.JButton btnUP2;
    private javax.swing.JTextField edtTitulo;
    private helper.HtmlEditorPanel htmlEditorPanel1;
    private helper.HtmlEditorPanel htmlEditorPanel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JMenuItem menuFechar;
    private javax.swing.JMenuItem menuSalvar;
    private javax.swing.JPanel panNav;
    // End of variables declaration//GEN-END:variables

    //<editor-fold defaultstate="collapsed" desc="Ultil">
    public byte[] ImagemDaSelecao() {
        Diagrama diagramaAtual = fmp.getEditor().diagramaAtual;
        final int borda = 2;
        Point p2 = diagramaAtual.getPontoExtremoSelecionado();
        int minX = p2.x;
        int minY = p2.y;

        for (int i = diagramaAtual.getItensSelecionados().size() - 1; i > -1; i--) {
            FormaElementar el = diagramaAtual.getItensSelecionados().get(i);
            minX = Math.min(minX, el.getLeft());
            minY = Math.min(minY, el.getTop());
        }

        minX = Math.max(minX - borda, 0);
        minY = Math.max(minY - borda, 0);
        W = p2.x - minX;
        H = p2.y - minY;
        BufferedImage cp_img = util.ImageGenerate.geraImagemForPrnSelecao(diagramaAtual, p2.x + borda, p2.y + borda);
        return util.TratadorDeImagens.toByteArray(cp_img.getSubimage(minX, minY, p2.x - minX, p2.y - minY));
    }
    //</editor-fold>

    public boolean LoadData() {

        htmlEditorPanel1.setContentType("text/html");
        htmlEditorPanel2.setContentType("text/html");
        AjudaMng = AjudaManager.LoadDataHelp();

        Handler.install();

        boolean res = true;
        if (AjudaMng == null) {
            AjudaMng = new AjudaManager(0, Editor.fromConfiguracao.getValor("Controler.interface.help"),
                    RepositorioHtml.generateSobre());
            res = false;
        }
        PopuleTree();
        maxID = AjudaMng.FindMaxID();
        DoMuda(false);
        btnEditarActionPerformed(null);
        return res;
    }

    private TreeItem TreePincipal = null;
    public AjudaManager AjudaMng = null;

    private TreeItem PopuleTree() {
        final TreeItem tree = new TreeItem(AjudaMng.getTitulo(), 0, "");
        AjudaMng.getChilds().stream().forEach((it) -> {
            it.PopuleTree(tree);
        });
        Tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        Tree.setModel(new DefaultTreeModel(tree));
        Tree.setSelectionRow(0);
        TreePincipal = tree;
        nav.clear();
        panNav.removeAll();
        panNav.repaint();
        return tree;
    }

    private void SelectNodeByID(int oid) {
        TreeItem res = findByID(oid, TreePincipal);
        if (res != null) {
            Tree.setSelectionPath(new TreePath(res.getPath()));
        }
    }

    public TreeItem findByID(int id, TreeItem atual) {
        if (id == atual.getId()) {
            return atual;
        }
        for (int i = 0; i < atual.getChildCount(); i++) {
            TreeItem ia = (TreeItem) atual.getChildAt(i);
            TreeItem res = findByID(id, ia);
            if (res != null) {
                return res;
            }
        }
        return null;
    }

    private void DoMuda(boolean b) {
        btnSalvar.setEnabled(b);
        btnSalvarII.setEnabled(b);
        btnReload.setEnabled(b);
        AjudaMng.setMudou(b);
        menuSalvar.setEnabled(b);
    }

    public boolean Salva() {
        if (AjudaManager.SaveDataHelp(AjudaMng)) {
            DoMuda(false);
            return true;
        }
        return false;
    }

    private void performMove(int i) {
        TreeItem tv = ((TreeItem) Tree.getLastSelectedPathComponent());

        if (tv == null) {
            return;
        }
        ItemAjuda v = AjudaMng.findByID(tv.getId());
        if (v == null) {
            return;
        }

        ItemAjuda pai = v.getPai();
        int np = pai.getChilds().indexOf(v) + i;

        pai.getChilds().remove(v);
        pai.getChilds().add(np, v);

        DoMuda(true);
        PopuleTree();
        SelectNodeByID(v.getID());
    }

    public byte[] LoadImageFromFile() {
        String arq = util.Dialogos.ShowDlgFileImg(this.getRootPane());//, titulo); 
        if (arq == null) {
            return null;
        }

        BufferedImage imagem = null;
        try {
            File fimg = new File(arq);
            imagem = ImageIO.read(fimg);
        } catch (IOException iOException) {
            util.BrLogger.Logger("ERROR_OPEN_FILE_IMG", iOException.getMessage());
        } catch (Exception e) {
            util.BrLogger.Logger("ERROR_OPEN_FILE_IMG", e.getMessage());
        }
        if (imagem != null) {
            H = imagem.getHeight();
            W = imagem.getWidth();
            return util.TratadorDeImagens.toByteArray(imagem);
        }
        return null;
    }
}
